input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
}

type Todo @model {
  id: ID!
  name: String!
  description: String
}

type UserMegaNewsTalha @model {
  id: ID!
  first_name: String!
  last_name: String
  user_name: String
  email: String
  banner_pic: String
  user_pic: String
  explanation: String
  movies: [MovieMegaNewsTalha] @hasMany
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  userComments: [CommentMegaNewsTalha] @hasMany
  userReplies: [ReplyMegaNewsTalha] @hasMany

}
type MovieMegaNewsTalha @model {
  id: ID!
  title: String!
  tag: String
  movieimg: String
  movieexplanation: String
  category: String
  user: UserMegaNewsTalha @belongsTo(fields: ["userId"])
  userId:ID!
  comments: [CommentMegaNewsTalha] @hasMany
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!

}
type CommentMegaNewsTalha @model {
  id: ID!
  comment: String!
  userType: String!
  user: UserMegaNewsTalha @belongsTo(fields: ["userId"])
  userId:ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  replies: [ReplyMegaNewsTalha] @hasMany
}
type ReplyMegaNewsTalha @model {
  id: ID!
  comment: String!
  userType: String!
  user: UserMegaNewsTalha @belongsTo(fields: ["userId"])
  userId:ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}
# type ContactUsMegaNewsTalha @model {
#   id: ID!
#   subject: String!
#   name: String!
#   email: String!
#   explanation: String
#   image: String
#   createdAt: AWSDateTime!
#   updatedAt: AWSDateTime!
# }
type Response {
  success: Boolean
  message: String
}

type Mutation {
  createContactUs(
    id: ID!,
    subject: String!,
    name: String!,
    email: String!,
    explanation: String,
    image: String,
    createdAt: AWSDateTime,
    updatedAt: AWSDateTime
  ): Response @function(name: "ContactUsMegaNewsTalhaFunction-${env}")
}

type Query {
  getContactUs(id: ID!): Response @function(name: "ContactUsMegaNewsTalhaFunction-${env}")
}

